스택/큐 퀴즈 기능개발

기능은 진도가 100% 일때 서비스에 반영 가능

각 기능의 개발 속도는 모두 다름 

뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발 가능

이 경우에 뒤에 있는 기능은 앞 기능 배포될 때 같이 배포 

배포는 하루 한번, 하루의 끝에 배포 
ex) 95%, 속도 4 => 99% => 100% -> 2일 뒤 배포 


정수 배열 progresses 
index 배포 순서
element 작업 진도 

정부 배열 speeds 
각 작업의 개발 속도 

각 배포마다 몇개 기능이 배포되는지 return 

progresses					speeds				return
[93, 30, 55]				[1, 30, 5]			[2, 1]

93 - 94 - 95 - 96 - 97 - 98 - 99 - 100	
배포일 : 7일 후  

30 - 60 - 90 - 100
배포일 : 완성은 3일 후, 앞 순서와 같이 배포되서 7일 후  

55 - 60 - 65 - 70 - 75 - 80 - 85 -90 - 95 - 100
배포일 : 9일 후

=> 7일 후 2개, 9일 후 1개 
=> [2, 1]


[95, 90, 99, 99, 80, 99]	[1, 1, 1, 1, 1, 1]	[1, 3, 2]

5일 10일 1일 1일 20일 1일 

앞 기능이 배포되야 뒤의 기능 배포 
5일 후에 1개 (95)
10일 후에 3개 (90, 99, 99)
20일 후에 2개 (80, 90)


코드 구상


progresses의 각 요소에 speeds의 요소 더하기 
이걸 반복

progresses의 0번 요소 값이 100 이상이 되면 pop(0) 하고
answer의 0번에 1 추가 
while문으로 반복 0번 요소 값이 100 미만일 때까지

없으면 
answer의 1번으로 넘어가서 다시 추가 


코드 부
def solution(progresses, speeds):
    answer = []
	stack = 0
	while progressess:

		while progresses[0] < 100: 

			for i in range((0, len(progresses)):
				progresses[i] + speeds[i]


		progresses.pop(0)
		speeds.pop(0)
		answer[stack] = answer[stack] + 1
		if progresses[0] < 100:
			stack = stack + 1
		
	return answer
 
 


