### 알고리즘 4주차 진법변환/비트연산 

## 1. 진법 변환 

# 10진법 -> 2진법

-> 계산법 : 2로 나눠주기 
-> bin(10) -> '0b1010' 
            => b -> 2진법 binary 
            
# 10진법 -> 8진법 
-> 계산법 : 8로 나눠주기 
-> oct(95) -> '0o137'
            => o -> 8진법 octal 

# 10진법 -> 16진법 

-> 0 ~ 9 + 나머지 6개 숫자 -> a, b, c, d, e, f
-> 계산법 -> 16으로 나누기 
-> hex(350) -> '0x15e' 
            => x -> 16진법 hex 
            
            
# bin(), oct(), hex()만 내장함수 

# 진법 변환하기 (n진법 -> 10진법)

-> int(0b1101), int(0o73), int(0x7e)

## 2. 비트연산 

# 비트 연산의 종류 5가지 
- & : AND
- | : OR
- ^ : XOR
- ~ : NOT
- <<, >> : SHIFT 

- & : 각각의 자리수를 비교하여 둘 다 1일 경우 1, 아니면 0
    -> 0b1101 & 0b1011 -> 0b1001
    
- | : 각각의 자리수 비교, 둘 중 하나가 1일 경우 1. 아니면 0
    -> 0b1101 | 0b1011 -> 0b1111
    
- ^ : 다르면 1, 같으면 0
    -> 0b1101 ^ 0b1011 -> 0b0110

- ~ : 비트 반전 연산자 0은 1로 1은 0으로
      -> 2진수의 음수 
      
      2진수 0b0011 -> 10진수 3
      2진수 0b0010 -> 10진수 2
      2진수 0b0001 -> 10진수 1
      2진수 0b0000 -> 10진수 0
      2진수 0b1111 -> 10진수 -1
      2진수 0b1110 -> 10진수 -2
      2진수 0b1101 -> 10진수 -3
      2진수 0b1100 -> 10진수 -4
        
      bin(~0b0010) -> 0b1101 -> -3 -> - 와 3 -> 3부분이 0011로 치환 
      -> -0b0011
      
      ~ NOT은 음수의 표현을 처리하기 위함 
      
     => 기존의 값에 1을 더해준 후 -를 붙여주면 된다. 
      
      
- <<, >> : 비트 이동 연산자, 비트를 주어진 만큼 옮긴다


* & | ^은 확실히 숙지해놓아야 한다.


# 비트 연산과 십진법 

35 | 5 -> 100011 | 101 -> 100111 -> 39
=> 컴퓨터에서 알아서 변환하고 계산하고 변환해서 출력해준다


# 비트 연산의 활용
   1. 컴퓨터 연산을 위한 비트 필드
   2. 데이터의 압축 및 암호화 
   3. 유한 상태 기계 
   4. 컴퓨터 통신을 위한 포트 및 소켓 